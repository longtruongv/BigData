version: '3'

services:
  # spark-master:
  #   image: bde2020/spark-master:2.4.0-hadoop2.8-scala2.12
  #   container_name: spark-master
  #   ports:
  #     - "8080:8080"
  #     - "7077:7077"
  #   environment:
  #     - INIT_DAEMON_STEP=setup_spark
  #   networks:
  #     - my-net

  # spark-worker-1:
  #   image: bde2020/spark-worker:2.4.0-hadoop2.8-scala2.12
  #   container_name: spark-worker-1
  #   depends_on:
  #     - spark-master
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - "SPARK_MASTER=spark://spark-master:7077"
  #   networks:
  #     - my-net

  # spark-worker-2:
  #   image: bde2020/spark-worker:2.4.0-hadoop2.8-scala2.12
  #   container_name: spark-worker-2
  #   depends_on:
  #     - spark-master
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     - "SPARK_MASTER=spark://spark-master:7077"
  #   networks:
  #     - my-net

  # pyspark:
  #   image: jupyter/pyspark-notebook
  #   container_name: pyspark-notebook
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - ./:/home/jovyan/work/
  #   networks:
  #     - my-net


  mongodb:
    image : mongo
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./mongodb/database:/data/db
    ports:
      - 27017:27017
    restart: unless-stopped
    networks:
      - my-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
    networks:
      - my-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on: 
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    ports:
      - 9092:9092
    networks:
      - my-net

  pgdb:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: test1
      POSTGRES_PASSWORD: test1
      POSTGRES_DB: football_data
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    volumes:
      - "./postgres/data:/var/lib/postgresql/data:rw"
    ports:
      - 5432:5432
    networks:
      - my-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: always
    ports:
      - "5050:80"
    networks:
      - my-net

networks:
  my-net:
    driver: bridge
  